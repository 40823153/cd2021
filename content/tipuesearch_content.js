var tipuesearch = {"pages": [{'title': '個人簡介', 'text': '四設計二甲 40823153 蕭日傑 \n github \n \n gitter \n \n youtube \n \n \n \n \n', 'tags': '', 'url': '個人簡介.html'}, {'title': 'stage1-ag21', 'text': '2021-協同產品設計實習-STAGE1-AG21 \n 專題題目:籃球機 \n 組員 \n 40823152倉儲 \n 40823153倉儲 \n 40823154倉儲 \n 小組 \n stage1-ag21', 'tags': '', 'url': 'stage1-ag21.html'}, {'title': 'w1', 'text': '1.創建倉儲 \n 2.尋找組員 \n 3.製作leo \n \n', 'tags': '', 'url': 'w1.html'}, {'title': 'leo', 'text': '\n \n leo的開啟與編輯 \n \n 開啟檔案 \n \n 接下來到config的資料夾 \n \n 第一個是blog 第二個是簡報 \n 打開blog的檔案 \n \n 先改為"協同產品設計" \n \n 還有改成自己的學號 \n \n 到共用、遠端和近端更改網址 \n \n 記得檢查近端遠端和中端的網址要改成學號以及加上cd2021不然會打不開blog \n \n 左為近端 右為遠端 兩個都要goto script \n \n goto script \n \n 存檔完就可以打開bolg \n 做完blog還要git push 不然blog不會更新 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'leo.html'}, {'title': 'w2', 'text': '在這一周我們這組先將籃球機的大致模樣先畫了出來，並且也使用CoppeliaSimEdu讓籃球機的發球桿轉動 \n \n 版本為 Autodesk Inventor Professional 2019 - 繁體中文 (Traditional Chinese) \n \n', 'tags': '', 'url': 'w2.html'}, {'title': 'inventor 圖檔', 'text': '\n 籃球機歷代版本 \n 籃球機 初代 \n \n 籃球機2 \n \n 籃球機3 \n \n 籃球機4 \n \n \n', 'tags': '', 'url': 'inventor 圖檔.html'}, {'title': 'coppeliaSim拋物線動力模擬', 'text': '\n', 'tags': '', 'url': 'coppeliaSim拋物線動力模擬.html'}, {'title': 'inventor 模擬測試教學', 'text': '除了使用CoppeliaSimEdu做動態模擬外，還可以使用inventor去做動態模擬 \n \n 任何模擬都要到環境去做操作 \n \n 再來我們要做的是拋物線模擬，所以要使用動力學模擬去做操作 \n \n 一般來說初始畫面就只會有這些東西 \n \n 首先我們要先給物件重力 \n \n 通常我們重力都會給向下的力，如果黃色的箭頭是向上的話，將箭頭方向改為向下即可 \n \n 但是設完重力之後，球就會往下掉，並穿透主機構，所以就要讓球與主機構有編輯上的關係，讓球不會穿透主機構 \n \n 於是我們許要做的事是先插入接頭讓球與主機構有關係 \n \n 而這邊要使用3D接觸以防球掉下去，再來就先選擇球也就是元件1 \n \n 選好元件1之後我們選擇元件2，元件2的任意一個面即可 \n \n 球就不會穿過基座，而是停留在上面 \n \n 接著再以同樣的步驟，讓球與發球器有接觸 \n \n 設定完的接觸可從力接頭確認 \n \n 現在我們要讓發球器轉動就要給它設置力量，才能讓它轉動，並去撞擊球 \n \n 首先我們要讓發球器有力量轉動，就要到性質這邊去做調整 \n \n 到了性質這邊可以自由調整初始角度 \n \n 接下來要啟用接合扭矩並去調整所需要的數值即可 \n \n 這可以選擇輸入常數值或著是輸入圖表產生器 \n \n 這裡可自由設定線型函數數值 \n \n 左邊可輸入撥放時間右邊可輸入撥放速度數字越大越慢，反之則快 \n \n 最後打開模擬撥放器點擊撥放即可 \n \n', 'tags': '', 'url': 'inventor 模擬測試教學.html'}, {'title': 'inventor 拋物線動力模擬', 'text': '\n', 'tags': '', 'url': 'inventor 拋物線動力模擬.html'}, {'title': 'w3', 'text': '修改第二周的問題並改善完成籃球機，並將籃球機資料整理完善。 \n', 'tags': '', 'url': 'w3.html'}, {'title': 'w4', 'text': '報告 \n \n', 'tags': '', 'url': 'w4.html'}, {'title': 'stage2-ag12', 'text': '專題題目:籃球機2 \n 組員 \n \xa0 40823152 repo \xa0 | \xa0 40823152 site \xa0 | \n \xa0 40823153 repo \xa0 | \xa0 40823153 site \xa0 | \n \xa0 40823125 repo \xa0 | \xa0 40823125 site \xa0 | \n \xa0 40823110 repo \xa0 | \xa0 40823110 site  | \n 小組 \n stage2-ag12  | \n', 'tags': '', 'url': 'stage2-ag12.html'}, {'title': '工作分配', 'text': '', 'tags': '', 'url': '工作分配.html'}, {'title': '產品目標', 'text': '主題:籃球機 二代 \n \n 動機: \n 第一次小組產品的籃球機只能自己轉動無法控制，所以二代的籃球機目標增加案件控制轉動。 \n \n 製作規劃: \n w5:確認主題，工作分配 \n \n w6:尋找lua程式與 coppeliaSim 文章 ，並且使用lua程式控制軸在coppeliaSim裡模擬，籃球機外觀修整。 \n \n w7:完成按鍵控制程式與模擬 ，籃球機外觀修整。 \n \n w8:除錯與修整，完成簡報與pdf \n \n w9:報告', 'tags': '', 'url': '產品目標.html'}, {'title': 'w5', 'text': '籃球機2.1 \n 設計緣由 : 想藉由曲柄連桿擊打球 , 方便 coppeliaSim 模擬與修正 \n', 'tags': '', 'url': 'w5.html'}, {'title': 'inventor版本2.1', 'text': '籃球機2.1 \n \n 連桿機構的特點： \n 優點：運動副單位面積所受的壓力小且面接觸受力小，便於潤滑，磨損小；製造方便。 \n 缺點：設計複雜誤差大。工作效率低。 \n 原文網址： https://kknews.cc/news/3l5m3ey.html \n \n 主要問題 : \n 1.過於簡陋 \n 2.擊球桿會撞到基座 \n 改善方法 : \n 1.擊球桿的形狀 \n 2.滑塊的距離縮短 \n \xa0', 'tags': '', 'url': 'inventor版本2.1.html'}, {'title': 'w6', 'text': '籃球機2.2 \n 無框版 \n 設計緣由 : \n 1. 想將擊球點角度提高 , 所以將擊球桿形狀設計的像車刀一樣。 \n 2. 為了讓擊球時滑塊的支點不會滑動 , 而且球掉落在頂端時有停頓的時間 \n \n 有框版 \n 設計緣由 : 為了讓滑塊不會撞到曲柄 , 所以將擊球桿改為直的 \n \n', 'tags': '', 'url': 'w6.html'}, {'title': 'inventer 版本2.2', 'text': '籃球機2.2 \n 無框版 \n \n \n \n \n 主要問題 : \n 1. 滑塊會撞到曲柄 \n 改善方法 : \n 1. 擊球桿改為直的 \n 有框版 \n \n \n 主要問題 : \n 1. 球模擬時不一定是直線 \n 改善方法 : \n 1. 所以將斜坡面積變大', 'tags': '', 'url': 'inventer 版本2.2.html'}, {'title': 'CoppeliaSim v-rep 2.2', 'text': "Inquire keyboard number \n 查詢keyboard按鍵 \n print(auxiliaryData[1])\n      if (auxiliaryData[1]==string.byte(' ')) then\n \n 介紹: \n 可以查詢鍵盤代碼 \n \n", 'tags': '', 'url': 'CoppeliaSim v-rep 2.2.html'}, {'title': 'w7', 'text': '籃球機2.3 \n 設計緣由 : \n 1. 為了確定可以完整的接到球 , 所以將斜坡面積變大 \n 2. 為了讓滑塊不會撞到曲柄 , 所以改為曲柄滑塊機構 \n', 'tags': '', 'url': 'w7.html'}, {'title': 'inventor2.3', 'text': '籃球機2.3 \n \n 側面透視圖 \n \n 主要問題 : \n 1. 斜面的接球太斜而且不夠深 , 會導致球掉出來 \n 改善方法 : \n 1. 將斜面挖深 , 並且將斜面改為單斜而不是曲型', 'tags': '', 'url': 'inventor2.3.html'}, {'title': 'CoppliaSim v-rep 2.3', 'text': '主要問題 : \n 1.CoppeliaSim v-rep  連桿運動問題 \n 一開始在 CoppeliaSim 上模擬發現模型無法順利地運轉 \n \n 改善方法 : \n 1.CoppeliaSim v-rep  連桿運動問題 解決 \n 後來才發現原來是尺寸的問題 \n 由於 coppliasim 對與尺寸可能無法到 inventor 那麼精準所以要預留空隙 , 才能順利運轉 \n \n Lua control speed \n 使用Lua程式控制coppeliaSim擊球桿的轉速 \n \n keyboard control \n 使用Lua程式寫出可以由鍵盤按鈕控制coppeliaSim的擊球桿 \n', 'tags': '', 'url': 'CoppliaSim v-rep 2.3.html'}, {'title': 'w8', 'text': '籃球機2.4 \n 2.4.1 \n 設計緣由 : \n 1. 為了確定可以完整的接到球 , 所以將斜坡面積挖深並改為單斜面 \n 2. 為了滑動流暢將滑塊改為圓形 \n 3. 想將擊球點角度提高 , 所以將擊球桿的擊球面設計為平面 \n \n 2.4.2 \n 設計緣由 : 為了讓球順利擊飛 , 所以將擊球桿的擊球面改為曲型', 'tags': '', 'url': 'w8.html'}, {'title': 'inventor 2.4', 'text': '籃球機2.4 \n 2.4.1 \n \n \n 主要問題 : \n 1. 擊球時 , 球無法順利擊飛 \n 改善方法 : \n 1. 將擊球桿的擊球面改為曲型 \n 2.4.2 \n \n', 'tags': '', 'url': 'inventor 2.4.html'}, {'title': 'CoppeliaSim v-rep 2.4', 'text': '\n Lua keyboard Turn back \n 擊球桿新增後轉功能，可以有效控制擊球的時機。 \n \n \n', 'tags': '', 'url': 'CoppeliaSim v-rep 2.4.html'}, {'title': '協同報告', 'text': '2021-協同產品設計實習-stage2-ag12.pdf', 'tags': '', 'url': '協同報告.html'}, {'title': 'stage3-ag6', 'text': '專題題目: \n 組員 \n 40823110 repo \xa0 | \xa0 40823110 site  | \n 40823125 repo \xa0 | \xa0 40823125 site \xa0 | \n   40823152 repo \xa0|\xa0 40823152 site \xa0| \n   40823153 repo \xa0 | \xa0 40823153 site \xa0 | \n 40823117 repo  |  40823117 site  | \n   40823122 repo  |  40823122 site  | \n 40823129 repo  |  40823129 site  | \n   40823149 repo  |  40823149 site  |  \n 小組 \n 網站  |  倉儲', 'tags': '', 'url': 'stage3-ag6.html'}, {'title': 'w10', 'text': '', 'tags': '', 'url': 'w10.html'}, {'title': 'task1', 'text': '程式 \n # open file, default is read mode, since txt content no chinese char4\n# no encoding = "UTF-08" is needed\nwith open("stage3_2a.txt") as fh:\n    # readlines will read into the whole line 2 and put into list format\n    # has \\n at the end of each line 31\n    data = fh.readlines()\n    A = [a.replace (\'4823122\',\'40823122\') for a in data]\n    B = [b.replace (\'\\t\\t\\t\\t\',\'\') for b in A]\n    C = [c.replace (\'_\',\'-\') for c in B]\n#print(len(data))\nfor i in range(len(data)):\n    group = B[i].rstrip("\\n").split("\\t")\n    print(\'<p>\'+group[0]+\' | <a href ="https://\'+group[1]+\'.github.io/stage3-ag\'+group[0][9]+\'">網站</a> | <a href ="https://github.com/\'+group[1]+\'/stage3-ag\'+group[0][9]+\'">倉儲</a> \')\n# the following will use group data to generate needed html 53\n    for x in range(2,18,2):\n        try:\n            print (  \'<p>\'+group[x]+\'| <a href ="https://\'+group[x]+\'.github.io/stage3-ag\'+group[0][9]+\'">stage3</a> | <a href ="https://\'+group[x]+\'.github.io/cd2021">網站</a> | <a href="https://github.com/\'+group[x]+\'/cd2021">倉儲</a></p>\')\n        except:\n            continue \n \n \n 成品 \n stage3_ag1 |  網站  |  倉儲 \n 40823131 |  stage3  |  網站  |  倉儲 \n a40823112 |  stage3  |  網站  |  倉儲 \n 40823123 |  stage3  |  網站  |  倉儲 \n 40823145 |  stage3  |  網站  |  倉儲 \n 40823136 |  stage3  |  網站  |  倉儲 \n 40823109 |  stage3  |  網站  |  倉儲 \n 40823116 |  stage3  |  網站  |  倉儲 \n 40823108 |  stage3  |  網站  |  倉儲 \n stage3_ag2 |  網站  |  倉儲 \n 40823151 |  stage3  |  網站  |  倉儲 \n 40623121 |  stage3  |  網站  |  倉儲 \n 40871106 |  stage3  |  網站  |  倉儲 \n 40823102 |  stage3  |  網站  |  倉儲 \n 40823104 |  stage3  |  網站  |  倉儲 \n 40823106 |  stage3  |  網站  |  倉儲 \n 40823101 |  stage3  |  網站  |  倉儲 \n 40823132 |  stage3  |  網站  |  倉儲 \n stage3_ag3 |  網站  |  倉儲 \n 40823119 |  stage3  |  網站  |  倉儲 \n 40823150 |  stage3  |  網站  |  倉儲 \n 40823103 |  stage3  |  網站  |  倉儲 \n 40823107 |  stage3  |  網站  |  倉儲 \n 40523252 |  stage3  |  網站  |  倉儲 \n 40823154 |  stage3  |  網站  |  倉儲 \n stage3_ag4 |  網站  |  倉儲 \n 40823142 |  stage3  |  網站  |  倉儲 \n 40823144 |  stage3  |  網站  |  倉儲 \n 40823127 |  stage3  |  網站  |  倉儲 \n 40823148 |  stage3  |  網站  |  倉儲 \n 40823121 |  stage3  |  網站  |  倉儲 \n 40823135 |  stage3  |  網站  |  倉儲 \n 40823114 |  stage3  |  網站  |  倉儲 \n 40823146 |  stage3  |  網站  |  倉儲 \n stage3_ag5 |  網站  |  倉儲 \n 40823111 |  stage3  |  網站  |  倉儲 \n 40823115 |  stage3  |  網站  |  倉儲 \n 40823128 |  stage3  |  網站  |  倉儲 \n 40823120 |  stage3  |  網站  |  倉儲 \n 40823140 |  stage3  |  網站  |  倉儲 \n 40823124 |  stage3  |  網站  |  倉儲 \n 40823139 |  stage3  |  網站  |  倉儲 \n 40823126 |  stage3  |  網站  |  倉儲 \n stage3_ag6 |  網站  |  倉儲 \n 40823152 |  stage3  |  網站  |  倉儲 \n 40823110 |  stage3  |  網站  |  倉儲 \n 40823122 |  stage3  |  網站  |  倉儲 \n 40823125 |  stage3  |  網站  |  倉儲 \n 40823117 |  stage3  |  網站  |  倉儲 \n 40823129 |  stage3  |  網站  |  倉儲 \n 40823149 |  stage3  |  網站  |  倉儲 \n 40823153 |  stage3  |  網站  |  倉儲 \n \n 參考: 40823131', 'tags': '', 'url': 'task1.html'}, {'title': 'task2', 'text': 'remote api 小車遠端操作教學 \n \n', 'tags': '', 'url': 'task2.html'}, {'title': 'w13-w14', 'text': '', 'tags': '', 'url': 'w13-w14.html'}, {'title': 'w15', 'text': '影片翻譯 \n 翻譯網站: \n Google_Translate \n \n Cambridge Dictionary \n \n', 'tags': '', 'url': 'w15.html'}, {'title': '第一部 Inverse kinematics for a 2-joint robot arm using geometry', 'text': 'Inverse kinematics for a 2-joint robot arm using geometry 使用幾何學的 2 關節機器人手臂的逆運動學 \n \n We saw this simple two-link robot in the previous lecture about forward kinematics. 我們在上一堂關於正向運動學的講座中看到了這個簡單的雙連桿機器人。 The tooltip pose of this robot is described simply by two numbers, the coordinates x and 該機器人的工具提示姿態由兩個數字簡單描述，坐標 x 和 y with respect to the world coordinate frame. y 相對於世界坐標系。 So, the problem here is that given x and y, we want to determine the joined angles, Q1 所以，這裡的問題是給定 x 和 y，我們要確定連接角 Q1 and Q2. 和 Q2。 The solution that we’re going to follow in this particular section is a geometric 我們將在本節中遵循的解決方案是幾何 one. 一。 We’re going to start with a simple piece of construction. 我們將從一個簡單的結構開始。 We’re going to overlay the red triangle on top of our robot. 我們將在機器人頂部覆蓋紅色三角形。 We know that the end point coordinate is x, y, so the vertical height of the triangle 我們知道終點坐標是x，y，所以三角形的垂直高度 is y, the horizontal width is x. 是 y，水平寬度是 x。 And, using Pythagoras theorem, we can write r squared equals x squared plus y squared. 並且，使用畢達哥拉斯定理，我們可以寫出 r 平方等於 x 平方加上 y 平方。 So far, so easy. 到目前為止，很容易。 Now, we’re going to look at this triangle highlighted here in red and we want to determine 現在，我們將查看此處以紅色突出顯示的三角形，我們想確定 the angle alpha. 角度α。 In order to do that, we need to use the cosine rule. 為了做到這一點，我們需要使用餘弦規則。 And, if you’re a little rusty on the cosine rule, here is a bit of a refresher. 而且，如果你對余弦規則有點生疏，這裡有一點複習。 We have an arbitrary triangle. 我們有一個任意三角形。 We don’t have to have any right angles in it and we’re going to label the length of 我們不必有任何直角，我們將標記長度 this edge as A and the angle opposite that edge, we’re going to label as little a. 這條邊作為 A 以及與這條邊相對的角度，我們將標記為小 a。 And, we do the same for this edge and this angle, and this edge and this angle. 並且，我們對這條邊和這個角，以及這條邊和這個角做同樣的事情。 So, all together, the sides are labelled capitals A, B and C, and the angles are labelled little 所以，總而言之，邊被標記為大寫 A、B 和 C，而角被標記為小 a, little b, and little c. a、小b和小c。 So, the cosine rule is simply this relationship here. 所以，餘弦規則就是這裡的這種關係。 It’s a bit like Pythagoras’ theorem except for this extra term on the end with the cos 它有點像畢達哥拉斯定理，除了在末尾加上 cos 的這個額外項 a in it. 一個在裡面。 Now, let’s apply the cosine rule to the particular triangle we looked at a moment 現在，讓我們將餘弦規則應用於我們剛才看到的特定三角形 ago. 前。 It’s pretty straightforward to write down this particular relationship. 寫下這種特殊關係非常簡單。 We can isolate the term cos alpha which gives us the angle alpha that we’re interested 我們可以分離出術語 cos alpha，它為我們提供了我們感興趣的角度 alpha in. 在。 And, it’s defined in terms of the constant link lengths, A1 and A2 and the position of 並且，它是根據恆定鏈接長度 A1 和 A2 以及 the end effector, x and y. 末端執行器，x 和 y。 We can write this simple relationship between the angles alpha and Q2. 我們可以寫出角度 alpha 和 Q2 之間的這種簡單關係。 And, we know from the shape of the cosine function that cos of Q2 must be equal to negative 並且，我們從餘弦函數的形狀知道 Q2 的 cos 必須等於負 of cos alpha. cos 阿爾法。 This time, let’s just write an expression for the cosine of the joined angle Q2. 這一次，讓我們為連接角 Q2 的餘弦寫一個表達式。 Now, we’re going to draw yet another red triangle and we’re going apply some simple 現在，我們將繪製另一個紅色三角形，我們將應用一些簡單的 trigonometry here. 三角函數在這裡。 If we know Q2, then we know this length and this length of the red triangle. 如果我們知道 Q2，那麼我們就知道這個長度和這個紅色三角形的長度。 We can write this relationship for the sine of the joined angle Q2. 我們可以為連接角 Q2 的正弦寫出這種關係。 Now, we can consider this bigger triangle whose angle is beta and this side length of 現在，我們可以考慮這個更大的三角形，它的角是β，邊長是 the triangle is given here in blue. 三角形在這里以藍色給出。 And, the length of the other side of the triangle is this. 並且，三角形另一邊的長度是這個。 So, now we can write an expression for the angle beta in terms of these parameters here. 所以，現在我們可以在此處根據這些參數編寫角度 beta 的表達式。 Going back to the red triangle that we drew earlier, we can establish a relationship between 回到我們之前畫的紅色三角形，我們可以建立之間的關係 Q1 and the angle beta. Q1 和角β。 Introduce yet another angle, this one gamma and we can write a relationship between the 引入另一個角度，這個伽馬和我們可以寫出 angle gamma and the tooltip coordinates x and y. 角度伽馬和工具提示坐標 x 和 y。 Now, we can write a simple relationship between the angles that we’ve constructed, gamma 現在，我們可以寫出我們構建的角度之間的簡單關係，gamma and beta and the joined angle we’re interested in which is Q1. 和 beta 以及我們感興趣的連接角是Q1。 And, the total relationship looks something like this. 而且，整個關係看起來像這樣。 Quite a complex relationship, it gives us the angle of joined one, that’s Q1 in terms 相當複雜的關係，它給了我們連接的角度，用術語來說就是 Q1 of the end effector coordinates y and x, and a bunch of constants, a1 and a2, and it’s 末端執行器坐標 y 和 x，以及一堆常量 a1 和 a2，它是 also a function of the second joint angle, Q2. 也是第二關節角度 Q2 的函數。 So, let’s summarize what it is that we have derived here. 所以，讓我們總結一下我們在這裡得出的結論。 We have an expression for the cosine of Q2 and we have an expression for Q1. 我們有 Q2 的餘弦表達式和 Q1 的表達式。 Now, the cosine function is symmetrical about 0. 現在，餘弦函數關於 0 對稱。 So, if we know the value of the cosine of Q2, then there are two possible solutions, 所以，如果我們知道 Q2 的餘弦值，那麼有兩種可能的解決方案， a positive angle and a negative angle. 一個正角和一個負角。 We’re going to explicitly choose the positive angle, which means that I can write this expression 我們將明確選擇正角，這意味著我可以寫出這個表達式 here. 這裡。 And now, we have what we call the inverse kinematic solution for this two-link robot. 現在，我們有了這個雙連桿機器人的逆運動學解決方案。 We have an expression for the two joined angles, Q1 and Q2 in terms of the end effector pose 我們有兩個連接角 Q1 和 Q2 的末端執行器姿勢表達式 x and y, and a bunch of constants. x 和 y，以及一堆常量。 You notice that the two equations are not independent. 你注意到這兩個方程不是獨立的。 The equation for Q1, in fact, depends on the solution for Q2. 事實上，Q1 的方程取決於 Q2 的解。 In this case, Q2 is negative and we’re going to write the solution for Q2 with a negative 在這種情況下，Q2 是負數，我們將用負數寫出 Q2 的解 sign in front of the inverse cosine. 符號在反餘弦前面。 Now, we need to solve for Q1, so we’re going to introduce this particular red triangle, 現在，我們需要求解 Q1，所以我們將介紹這個特殊的紅色三角形， the angle beta that we solved previously, and the angle gamma which is defined in terms 我們之前求解的角度β，以及用術語定義的角度伽瑪 of y and x. y 和 x。 Now, we write a slightly different relationship between Q1, gamma and beta, different to what 現在，我們在 Q1、gamma 和 beta 之間寫出略有不同的關係，不同於 we had before. 我們以前有過。 There’s a change of sign involved. 涉及到符號的變化。 Then, we can substitute all that previous equation and come up with this expression 然後，我們可以替換之前的所有等式並得出這個表達式 for Q1. 對於 Q1。 Again, there is a change of sign here. 同樣，這裡的符號發生了變化。 Previously, this was a negative sign. 以前，這是一個負面信號。 And, here in summary form is the solution for the inverse kinematics of our two-link 並且，這里以總結形式是我們的雙連桿逆運動學的解決方案 robot when it is in this particular configuration, where Q2 is negative. 機器人處於此特定配置時，其中 Q2 為負。 Let’s compare the two solutions, the case where Q2 is positive and the case where Q2 讓我們比較這兩種解決方案，Q2 為正的情況和 Q2 為正的情況 is negative. 是否定的。', 'tags': '', 'url': '第一部 Inverse kinematics for a 2-joint robot arm using geometry.html'}, {'title': '第二部 Inverse kinematics for a 2-joint robot arm using algebra', 'text': "Inverse kinematics for a 2-joint robot arm using algebra \n 使用 2 軸的機器人手臂的逆運動學 \n \n 字幕 \n Here we have the same two link robot as we just looked at but this time we're going to 在這裡，我們有剛剛看到的相同的兩個鏈接機器人，但這次我們要 solve it using an analytical approach, that is we're going to rely much more on algebra, 使用分析方法解決它，也就是說我們將更多地依賴代數， particular linear algebra rather than geometry. We have an expression E, which is the homogeneous 特定的線性代數而不是幾何。我們有一個表達式 E，它是齊次的 transformation which represents the pose of the robots endefector and we looked at this 代表機器人 endefector 姿勢的轉換，我們查看了這個 in the last lecture, we can write the endefector pose as a sequence of elementary homogeneous 在上一課中，我們可以將 endefector 姿勢寫為一系列基本齊次 transformations. A rotation by Q1, a translation along the X direction by A1, a rotation by 轉換。旋轉 Q1，沿 X 方向平移 A1，旋轉 Q2 and then a translation in the X direction by A2. If I expand this out, multiply all Q2，然後由 A2 在 X 方向進行平移。如果我展開這個，乘以所有 the transformations together, I get the expression shown here; a three by three homogeneous transformation 一起轉換，我得到這裡顯示的表達式；三乘三同構變換 matrix representing the pose of the robot's endefector. 表示機器人尾端姿態的矩陣。 Now for this particular two link robot, we are only interested in the position of its 現在對於這個特殊的兩連桿機器人，我們只對它的位置感興趣 endefector, it's X and Y co-ordinate and they are these two elements within the homogeneous endefector，它是 X 和 Y 坐標，它們是同質中的這兩個元素 transformation matrix, so I'm going to copy those out. So here again is our expression 轉換矩陣，所以我要把它們複製出來。所以這裡又是我們的表達 for X and Y and what we're going to do is a fairly common trick, we're going to square 對於 X 和 Y 我們要做的是一個相當常見的技巧，我們要平方 and add these two equations and I get a relationship that looks like this. Now I can solve for 並添加這兩個方程，我得到一個看起來像這樣的關係。現在我可以解決 the joint angle Q2 in terms of the endefector pose X and Y and the robot's constants A1 and A2. 關節角度 Q2 根據 endefector 姿勢 X 和 Y 以及機器人的常數 A1 和 A2。 Now what I'm going to do is apply the sum of angles identity. I'm going to expand these 現在我要做的是應用角度恆等式。我要擴展這些 terms, sine of Q1 plus Q2 or cos of Q1 plus Q2 and to make life a little bit easier, I'm 條款，Q1 的正弦加 Q2 或 Q1 的 cos 加 Q2 並讓生活更輕鬆一點，我是 going to make some substations, so where ever I had cos Q2, I'm going to write C2 and where 打算做一些變電站，所以我在哪裡有 cos Q2，我要寫 C2 和哪裡 ever I had sine Q2, I’m going to write S2. It's a fairly common shorthand when people 曾經我有正弦 Q2，我要寫 S2。這是一個相當常見的速記，當人們 are looking at robot kinematic equations. And here are the equations after making those 正在研究機器人運動學方程。這是製作後的方程式 substitutions. Looking at these two equations, I can see that they fall into a very well 替代品。看這兩個方程，我可以看出它們落入了一個很好的 known form and for that form there is a very well known solution. So I'm going to consider 已知形式，對於該形式，有一個眾所周知的解決方案。所以我要考慮 just one of the equations, the equation for Y and using our well known identity and it's 只是其中一個方程，Y 的方程並使用我們眾所周知的身份，它是 solution, I can determine the values for the variables little a, little b and little c 解決方案，我可以確定變量小 a、小 b 和小 c 的值 and once I've determined those, then I can just write down the solution for Q1, which 一旦我確定了這些，那麼我就可以寫下 Q1 的解決方案，即 is the equivalent of theta in this particular case. 在這種特殊情況下相當於 theta。 Here again is our expression for Q1, copied over from the previous slide and we may remember 這又是我們對 Q1 的表達，從上一張幻燈片複製過來，我們可能還記得 from earlier in our workings that we determined this particular relationship; X squared plus 在我們工作的早期，我們確定了這種特殊的關係； X平方加 Y squared is equal to this particular complex expression. So I can substitute that in and Y 平方等於這個特定的複數表達式。所以我可以用和代替它 do some simplification and I end up with this slightly less complex expression for Q1. And 做一些簡化，我最終得到了 Q1 的這個稍微不那麼複雜的表達式。和 it is the same expression that I got following the geometric approach in the previous section.  它與我在上一節中遵循幾何方法得到的表達式相同。 \n", 'tags': '', 'url': '第二部 Inverse kinematics for a 2-joint robot arm using algebra.html'}, {'title': 'w16', 'text': 'MTB_robot 的取放方塊流程規劃 (Process Planning): \n 1. Onshape 零組件繪製 (20%) \n 零組件必須在  Onshape  繪圖, 並提供可公開分享之零組件連結於頁面及回報區中. \n 2. 建立 CoppeliaSim 4.1.0 MTB robot 場景 (20%) \n 請以自行繪製之零件輸入 CoppeliaSim 後, 組合為 MTB robot 模型, 並利用 Leo Editor 以 require 導入 Lua 程式運作, 分別控制各軸轉動示範, 所完成的所有檔案請存入 W16_exam 後壓縮為 W16_exam.7z 後送至個人 @gm 帳號下的 Google Drive 後將連結設為任何人皆可下載, 並將連結與操作嵌入影片放在 W16 頁面與回報區中 . \n 3. 手臂末端加入 components-gripper-suction pad 吸盤 (20%) \n 請接續上述 MTB robot, 在其末端接上 force sensor 後接上標準 suction pad 後, 分別導入 W15 週線上課程之鍵盤控制程式後, 拍攝影片示範 W15 線上課程中之操作與示範過程. \n 4. 逆向運動學函式 (20%) \n 請根據 W15 線上課程內容之 Inverse Kinematics 方程式 ( 影片1  或 影片2 ), 以程式指定方塊取放之兩個位置 - (0.2, 0.7, 0.05) 與 (-0.3, -0.55, 0.05), 以前述 Leo Editor Lua 程式編寫方法, 分別採鍵盤控制與程式迴圈方式執行 W15 兩個指定位置之方塊取放. \n 5. Python remote API 逆向運動學函式 (20%) \n 請利用 Python remote API 程式重現以迴圈方式執行 W15 兩個指定位置之方塊取放. \n', 'tags': '', 'url': 'w16.html'}, {'title': '1.Onshape 零組件繪製', 'text': '\n \n 雲端檔案 \n \n onshape檔案 \n', 'tags': '', 'url': '1.Onshape 零組件繪製.html'}, {'title': '2.', 'text': '', 'tags': '', 'url': '2..html'}, {'title': '3.', 'text': '', 'tags': '', 'url': '3..html'}, {'title': '4.', 'text': '', 'tags': '', 'url': '4..html'}, {'title': '5.', 'text': '', 'tags': '', 'url': '5..html'}]};